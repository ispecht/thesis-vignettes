# MIT License
#
# Copyright (c) 2023 Ivan Specht
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
#   The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

## Code for Example B.1
library(parallel)

# Function that returns TRUE if the labeled Galton-Watson process contains an isomorphic subtree to (R,g) such that A(L) = B(phi(L)); FALSE otherwise.
simulate <- function(z, N){
  # Draw the number of nodes in generation i, n[i]
  n <- c()
  for (i in 1:4) {
    if(i == 1){
      n[i] <- rpois(1, 2)
    }else{
      # Sum of k i.i.d. Pois(2) r.v.s is Pois(2k)
      n[i] <- rpois(1, 2*n[i-1])
    }
  }
  # Whether generation 4 includes the label \kappa(r_{41}) = 4 is Bernoulli with probability 1 - (9/10)^n[4]
  if(runif(1) < 1 - ((N-1)/N)^n[4]){
    return(T)
  }else{
    return(F)
  }
}

res <- mclapply(1:1e6, simulate, N = 10, mc.cores = 12)
mean(unlist(res))
